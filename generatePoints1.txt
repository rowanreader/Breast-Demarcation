% function to generate n points in the shape of a circle or radius r randomly in space
% just a test function to generate input
function [pts, theta, phi] = generatePoints
n = 100; % number of points
r = 50; % radius
x0 = 0; % Center in x
y0 = 0; % Center in y
z0 = 0; % Center in z
range = 10; % range for direction vector 
error = 0; % max error
transCoord = 100; % range for transformation starting point
% create the set of points
pts = zeros(n,3); % n rows, 3 columns
xErr = 0;
yErr = 0;
zErr = 0;
for i = 1:n
    % get random 2D vector for direction in circle
    vec = randi([-range,range],2,1);
    % find [x,y,z] of point in that direction of radius r
    dir = (vec/norm(vec));
    pt = [dir(1)*r + x0, dir(2)*r + y0, 0 + z0];
    % add error to all [x,y,z]
    %xErr = randi([-error,error],1,1);
    %yErr = randi([-error,error],1,1);
    %zErr = randi([-error,error],1,1);
    pt = [pt(1) + xErr, pt(2) + yErr, pt(3) + zErr];
    pts(i,:) = pt;
end

% original circle
figure;
plot3(pts(:,1), pts(:,2), pts(:,3), 'bo');
%hold on;

% transform circle to random rotation about x axis and y axis
% random angles
theta = randi([0,360], 1, 1);
phi = randi([0,360], 1, 1);
rotateX = [1 0 0;
          1 cos(theta) -sin(theta)
          0 sin(theta) cos(theta)];
rotateY = [cos(phi) 0 sin(phi);
          0 1 0
          -sin(phi) 0 cos(phi)];
pts = pts *rotateX';
pts = pts *rotateY';
disp("theta = "+ theta);
disp("phi = "+ phi);
%pts(:,2) = pts(:,2)*cos(theta) - pts(:,3)*sin(theta);
%pts(:,3) = pts(:,2)*sin(theta) + pts(:,3)*cos(theta);

pts(:,1) = pts(:,1)*cos(phi) + pts(:,3)*sin(phi);
pts(:,3) = pts(:,3)*cos(phi) - pts(:,1)*sin(phi);
% transform circle to random 3D space
spot = randi([-transCoord, transCoord],1,3);
pts(:,:) = pts(:,:) + spot;
% plot
figure;
plot3(pts(:,1), pts(:,2), pts(:,3), 'ro');

figure;
plot3(pts(:,1), pts(:,2), pts(:,3), 'ro');

hold on;
[center, normal, rad] = CircFit3D(pts);
alpha = 0:0.01:2*pi;
v=null(normal');
points=repmat(center',1,size(theta,2))+ rad*(v(:,1)*cos(alpha)+v(:,2)*sin(alpha));
%points = points' * rotateX';
%points = points * rotateY';
plot3(points(1,:),points(2,:),points(3,:),'r-');
%plot3(points(:,1),points(:,2),points(:,3),'r-');
axis square;
end
